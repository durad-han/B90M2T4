<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.around.repository.mapper.CardMapper">

	<resultMap type="cardVO" id="cardMap">
		<result column="Card_Seq"		property="cardSeq" 			/>
		<result column="User_Seq"		property="userSeq" 			/>
		<result column="Card_Content"	property="cardContent" 		/>
		<result column="Card_Feeling"	property="cardFeeling" 		/>
		<result column="Card_Hashtag"	property="cardHashtag" 		/>
		<result column="Card_Longitude"	property="cardLongitude" 	/>
		<result column="Card_Latitude"	property="cardLatitude" 	/>
		<result column="Card_Img_Path"	property="cardImgPath"	 	/>
		<result column="Card_Reg_Date"	property="cardRegDate" 		/>
	</resultMap>
		
	<!--============================================================================
	
		C A R D		S E L E C T
		
	============================================================================-->	
	 
	 
	<!--============================================================================
			전체 카드 조회 selectCardList 
			필터링할 값: SearchVO의 begin between end, rownum 먹인 tb_Around_Card 대상
			파라메터의 데이터타입: SearchVO
			리턴되는 값의 데이터타입: List<CardVO>
	============================================================================-->
	<select id="selectCardList" parameterType="searchVO" resultMap="cardMap">
		select	*
		from	(
				select	rownum rNum, c.*
				from	(select	*
						 from	tb_Around_Card
 						 order	by Card_Seq <!--desc -->
						) c
				)
		where	rNum between #{begin} and #{end}
		
	</select>
	 
	 
	<!--============================================================================
			페이징용 카드 카운트 selectCardCount 
			필터링할 값: 없음
			파라메터의 데이터타입: SearchVO
			리턴되는 값의 데이터타입: int
	============================================================================-->
	<select id="selectCardCount" parameterType="searchVO" resultType="int">
    	select count(*)
    	  from tb_Around_Card
    </select> 
	
	
	<!--============================================================================
			시퀀스로 카드 조회 selectCardSeq 
			필터링할 값: Card_Seq
			파라메터의 데이터타입: int
			리턴되는 값의 데이터타입: CardVO
	============================================================================-->
	<select id="selectCardSeq" parameterType="int" resultMap="cardMap">
		select	*
		from	tb_Around_Card
		where	Card_Seq = #{cardSeq}
	</select>
	
	
	<!--============================================================================
			사용자로 카드 조회 selectCardUserSeq 
			필터링할 값: (tb_Around_User) User_Seq
			파라메터의 데이터타입: int
			리턴되는 값의 데이터타입: CardVO
	============================================================================-->
	<select id="selectCardUserSeq" parameterType="int" resultMap="cardMap">
		select	*
		from	tb_Around_Card
		where	User_Seq = #{userSeq}
		order	by Card_Seq desc
	</select>
	
	
	<!--============================================================================
			해시태그로 카드 조회 selectCardHashtag 
			필터링할 값: Card_Hashtag
			파라메터의 데이터타입: string
			리턴되는 값의 데이터타입: CardVO
	============================================================================-->
	<select id="selectCardHashtag" parameterType="string" resultMap="cardMap">
		select	*
		from	tb_Around_Card
		where	Card_Hashtag like '%'||#{cardHashtag}||'%'
		order	by Card_Seq desc
	</select>
	
	
	<!--============================================================================
			기분으로 카드 조회 selectCardFeeling
			필터링할 값: Card_Feeling
			파라메터의 데이터타입: string
			리턴되는 값의 데이터타입: CardVO
	============================================================================-->
	<select id="selectCardFeeling" parameterType="string" resultMap="cardMap">
		select	*
		from	tb_Around_Card
		where	Card_Feeling = #{cardFeeling}
		order	by Card_Seq desc
	</select>


	<!--============================================================================ 
	
		C A R D		INSERT	/	UPDATE	/	DELETE
	
	 ============================================================================-->


	<!--============================================================================
			카드 정보 입력 insertCard
			필터링할 값: 없음
			파라메터의 데이터타입: CardVO
			리턴되는 값의 데이터타입: 없음 
	============================================================================-->
		<insert id="insertCard" parameterType="cardVO" >
		insert	into tb_Around_Card 
				(
				Card_Seq,
				User_Seq,
				Card_Content,
				Card_Feeling,
				Card_Hashtag,
				Card_Longitude,
				Card_Latitude,
				Card_Img_Path
				)
		values	(
				s_Around_Card.nextVal,
				#{userSeq},
				#{cardContent},
				#{cardFeeling},
				#{cardHashtag},
				#{cardLongitude},
				#{cardLatitude},
				#{cardImgPath}
				)
	</insert>


	<!--============================================================================
			프로젝트 정보 수정 updateCard
			필터링할 값: Card_Seq
			파라메터의 데이터타입: CardVO
			리턴되는 값의 데이터타입: 없음
	============================================================================-->
	<update id="updateCard" parameterType="cardVO" >
		update	tb_Around_Card
		set		Card_Content			= #{cardContent},
				Card_Feeling			= #{cardFeeling},
				Card_Hashtag			= #{cardHashtag},
				Card_Longitude			= #{cardLongitude},
				Card_Latitude			= #{cardLatitude},
				Card_Img_Path			= #{cardImg_Path}
		where	Card_Seq		= #{cardSeq}
	</update>
	
	
	<!--============================================================================
			프로젝트 삭제 처리 deleteCard
			필터링할 값: Card_Seq
			파라메터의 데이터타입: int
			리턴되는 값의 데이터타입: 없음
	============================================================================-->
	<delete id="deleteCard" parameterType="int">
		delete	tb_Around_Card
		where	Card_Seq = #{cardSeq}
	</delete>
	
	
	
	
	
</mapper>