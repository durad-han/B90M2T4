<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.around.repository.mapper">

	<resultMap type="userVO" id="userMap">
		<result column="User_Seq"		property="UserSeq"		/>
		<result column="User_Id"		property="UserId"		/>
		<result column="User_Pass"		property="UserPass"		/>
		<result column="User_Reg_Date"	property="UserRegDate"	/>
	</resultMap>
		
	<!--============================================================================
	
		U S E R		S E L E C T
		
	============================================================================-->	
	 
	 
	<!--============================================================================
			전체 사용자 조회 selecUserList 
			필터링할 값: 없음
			파라메터의 데이터타입: 없음
			리턴되는 값의 데이터타입: List<UserVO>
	============================================================================-->
	<select id="selecUserList" resultMap="userMap">
		select	*
		from	tb_Around_User
		order	by User_Seq desc
	</select>
	 
	 
	<!--============================================================================
			특정 사용자 시퀀스로 조회 selectUserSeq 
			필터링할 값: User_Seq
			파라메터의 데이터타입: int
			리턴되는 값의 데이터타입: UserVO
	============================================================================-->
	<select id="selectUserSeq" parameterType="int" resultMap="userMap">
		select	*
		from	tb_Around_User
		where	User_Seq = #{userSeq}
	</select>


	<!--============================================================================ 
	
		U S E R		INSERT	/	UPDATE	/	DELETE
	
	 ============================================================================-->


	<!--============================================================================
			사용자 정보 입력 insertUser
			필터링할 값: 없음
			파라메터의 데이터타입: UserVO
			리턴되는 값의 데이터타입: 없음 
	============================================================================-->
	<insert id="insertUser" parameterMap="userMap" >
		insert	into tb_Around_User
				(
				User_Seq,
				User_Id,
				User_Pass
				)
		values	(
				s_Around_User.nextVal,
				#{UserId},
				#{UserPass}
				)
	</insert>


	<!--============================================================================
			사용자 정보 수정 updateUser
			필터링할 값: User_Seq
			파라메터의 데이터타입: UserVO
			리턴되는 값의 데이터타입: 없음
	============================================================================-->
	<update id="updateUser" parameterMap="userMap" >
		update	tb_Around_User
		set		User_Id			= #{User_Id},
				User_Pass		= #{User_Pass}
		where	User_Seq		= #{UserSeq}
	</update>
	
	
	
	
	
	
	
	
</mapper>